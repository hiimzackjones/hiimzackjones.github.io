I"ß
<p>I learned this trick the other day working on a Capture the flag challenge. If you donâ€™t know what a Capture the flag is, do a quick google. Itâ€™s pretty cool.</p>

<p>Basically there was a file named â€˜flagâ€™ hidden deep within some directories and each directory had multiple files. If I wanted to find the file using basic commands I could have simply just used cd and ls and manually looked through each directory. But that could take forever. So I looked around and find a Linux command that would look within the directory tree for any files with the keyword I told it to look for. It was such a useful command that I decided to write a quick post on it.</p>

<hr />
<p>I started by making the directories and fake files as well as the flag file. I put all of this in a directory called tree. Coincidentally I use a command called tree to go ahead and show how the files are layed out before we test out the find command.<br />
<img src="/assets/img/Find/1.gif" alt="1" /></p>

<p>I made the â€˜branchesâ€™ pretty deep. If the output of tree was confusing, here is what it looks like. <br />
<img src="/assets/img/Find/2.png" alt="2" /></p>

<p>So the find command is really easy. Use <code>man find</code> to read about it. in this case I used <code>find [directory to start from] -name [keyword to look for in name]</code></p>

<p>I knew that it was at least in Documents/tree and it had the name â€˜flagâ€™ in it.</p>

<p>Notice that it does the same sort of printing out that a command like pwd does. <br />
<img src="/assets/img/Find/3.gif" alt="3" /><br />
Okay so we found it. But we need to cat out the contents. So we could use cat and copy and paste. Or cd into it by copying and pasting. I did that here. <br />
<img src="/assets/img/Find/4.gif" alt="4" /><br />
So doing this challenge in a few lines is cool and all but sometimes it feels inefficient to have to leave the keyboard to copy and paste.  <br />
This is one of those moments where you can really take advantage of the shell.<br />
<img src="/assets/img/Find/5.gif" alt="5" /></p>

<p>Here I did the two commands I did in the first example but I sort of nested a command within another. In the <code> cat flag </code> command, I replace flag with the first line. But I use a special syntax to tell <code>cat</code> to do things in a certain order. Notice <code> $() </code> <br />
Itâ€™s basically like this-</p>

<p><code>command2 $(Command1)</code>  <br />
Where Command1 is the first command the shell executes, then the output of that command is used as the argument for Command2. Thatâ€™s a basic way to explain it.</p>

<p>Well. Thatâ€™s all I have. Use find to find stuff and use $() to â€˜nestâ€™ a command in the place of another commandâ€™s argument.</p>

<p>Cheers, 
Zack Jones.</p>

:ET